<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.trav.backEnd</groupId>
	<artifactId>backEnd</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>backEnd</name>
	<url>http://maven.apache.org</url>
  
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		 <!--  JUnit Dependency For Testing -->
		<dependency>
		   <groupId>junit</groupId>
		   <artifactId>junit</artifactId>
		   <scope>test</scope>
		</dependency>
		
	    <!-- Add typical dependencies for a web application -->
		<!-- Adds Tomcat and Spring MVC, along others, jackson-databind included transitively -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
	    
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<!--  This dependency lets Jackson (conversion from JSON To Java Objects) to be used -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
	    </dependency>
		

	</dependencies>
  
    <build>
        <plugins>
            <plugin><!-- Include if you want to make an executable jar[FAT JAR which includes all  dependencies along with sprinboot loader] that you can run on commandline using java -jar NAME -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin> <!-- This plugin is in the build block, because we want to force a build fail if the java style checks are no good -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>validating-java-style</id>
						<configuration>
							<configLocation>javaStyleChecks.xml</configLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal> <!-- 'check' is a specific goal to the checkstyle plugin. 
													Refer to https://maven.apache.org/plugins/maven-checkstyle-plugin/ for more info -->
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
</project>
